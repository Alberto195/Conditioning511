// Generated by view binder compiler. Do not edit!
package com.example.iweather511.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.iweather511.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RoomRecyclerItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView humidityItem;

  @NonNull
  public final ImageView humidityItemIcon;

  @NonNull
  public final ConstraintLayout itemConstraint;

  @NonNull
  public final TextView pPmItem;

  @NonNull
  public final ImageView pPmItemIcon;

  @NonNull
  public final ImageView person1;

  @NonNull
  public final ImageView person2;

  @NonNull
  public final ImageView person3;

  @NonNull
  public final ImageView person4;

  @NonNull
  public final ImageView plus;

  @NonNull
  public final TextView temperatureItem;

  @NonNull
  public final ImageView temperatureItemIcon;

  @NonNull
  public final TextView textView;

  private RoomRecyclerItemBinding(@NonNull LinearLayout rootView, @NonNull CardView cardView,
      @NonNull TextView humidityItem, @NonNull ImageView humidityItemIcon,
      @NonNull ConstraintLayout itemConstraint, @NonNull TextView pPmItem,
      @NonNull ImageView pPmItemIcon, @NonNull ImageView person1, @NonNull ImageView person2,
      @NonNull ImageView person3, @NonNull ImageView person4, @NonNull ImageView plus,
      @NonNull TextView temperatureItem, @NonNull ImageView temperatureItemIcon,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.humidityItem = humidityItem;
    this.humidityItemIcon = humidityItemIcon;
    this.itemConstraint = itemConstraint;
    this.pPmItem = pPmItem;
    this.pPmItemIcon = pPmItemIcon;
    this.person1 = person1;
    this.person2 = person2;
    this.person3 = person3;
    this.person4 = person4;
    this.plus = plus;
    this.temperatureItem = temperatureItem;
    this.temperatureItemIcon = temperatureItemIcon;
    this.textView = textView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RoomRecyclerItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RoomRecyclerItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.room_recycler_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RoomRecyclerItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = rootView.findViewById(id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.humidityItem;
      TextView humidityItem = rootView.findViewById(id);
      if (humidityItem == null) {
        break missingId;
      }

      id = R.id.humidityItemIcon;
      ImageView humidityItemIcon = rootView.findViewById(id);
      if (humidityItemIcon == null) {
        break missingId;
      }

      id = R.id.itemConstraint;
      ConstraintLayout itemConstraint = rootView.findViewById(id);
      if (itemConstraint == null) {
        break missingId;
      }

      id = R.id.pPmItem;
      TextView pPmItem = rootView.findViewById(id);
      if (pPmItem == null) {
        break missingId;
      }

      id = R.id.pPmItemIcon;
      ImageView pPmItemIcon = rootView.findViewById(id);
      if (pPmItemIcon == null) {
        break missingId;
      }

      id = R.id.person1;
      ImageView person1 = rootView.findViewById(id);
      if (person1 == null) {
        break missingId;
      }

      id = R.id.person2;
      ImageView person2 = rootView.findViewById(id);
      if (person2 == null) {
        break missingId;
      }

      id = R.id.person3;
      ImageView person3 = rootView.findViewById(id);
      if (person3 == null) {
        break missingId;
      }

      id = R.id.person4;
      ImageView person4 = rootView.findViewById(id);
      if (person4 == null) {
        break missingId;
      }

      id = R.id.plus;
      ImageView plus = rootView.findViewById(id);
      if (plus == null) {
        break missingId;
      }

      id = R.id.temperatureItem;
      TextView temperatureItem = rootView.findViewById(id);
      if (temperatureItem == null) {
        break missingId;
      }

      id = R.id.temperatureItemIcon;
      ImageView temperatureItemIcon = rootView.findViewById(id);
      if (temperatureItemIcon == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      return new RoomRecyclerItemBinding((LinearLayout) rootView, cardView, humidityItem,
          humidityItemIcon, itemConstraint, pPmItem, pPmItemIcon, person1, person2, person3,
          person4, plus, temperatureItem, temperatureItemIcon, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
